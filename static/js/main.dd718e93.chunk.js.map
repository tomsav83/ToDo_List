{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","className","onSubmit","e","preventDefault","id","Math","floor","random","text","type","placeholder","value","name","onChange","target","ref","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","previous","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MA0CeA,MAxCf,SAAkBC,GAChB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWC,iBAAO,MAqBxB,OAnBAC,qBAAU,WACRF,EAASG,QAAQC,WAmBjB,uBAAMC,UAAU,YAAYC,SAZT,SAACC,GACpBA,EAAEC,iBAEFZ,EAAMU,SAAS,CACbG,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMf,IAGRC,EAAS,KAIT,UACE,uBACEe,KAAK,OACLC,YAAY,aACZC,MAAOlB,EACPmB,KAAK,OACLZ,UAAU,aACVa,SAvBe,SAACX,GACpBR,EAASQ,EAAEY,OAAOH,QAuBdI,IAAKpB,IAEP,wBAAQK,UAAU,cAAlB,6B,eCQSgB,MAxCf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAC/C,EAAwB5B,mBAAS,CAC/BY,GAAI,KACJO,MAAO,KAFT,mBAAOU,EAAP,KAAaC,EAAb,KAaA,OAAID,EAAKjB,GACA,cAAC,EAAD,CAAUiB,KAAMA,EAAMpB,SATV,SAACU,GACpBS,EAAWC,EAAKjB,GAAIO,GACpBW,EAAQ,CACNlB,GAAI,KACJO,MAAO,QAQJM,EAAMM,KAAI,SAACC,EAAMC,GAAP,OACf,sBACEzB,UAAWwB,EAAKE,WAAa,oBAAsB,WADrD,UAIE,qBAAmBC,QAAS,kBAAMT,EAAaM,EAAKpB,KAApD,SACGoB,EAAKhB,MADEgB,EAAKpB,IAGf,sBAAKJ,UAAU,QAAf,UACE,cAAC,IAAD,CACE2B,QAAS,kBAAMR,EAAWK,EAAKpB,KAC/BJ,UAAU,gBAEZ,cAAC,IAAD,CACE2B,QAAS,kBAAML,EAAQ,CAAElB,GAAIoB,EAAKpB,GAAIO,MAAOa,EAAKhB,QAClDR,UAAU,mBAZTyB,OC6BIG,MAnDf,WACE,MAA0BpC,mBAAS,IAAnC,mBAAOyB,EAAP,KAAcY,EAAd,KAoCA,OACE,gCACE,4DACA,cAAC,EAAD,CAAU5B,SArCE,SAACuB,GACf,GAAKA,EAAKhB,OAAQ,QAAQsB,KAAKN,EAAKhB,MAApC,CAIA,IAAMuB,EAAQ,CAAIP,GAAJ,mBAAaP,IAE3BY,EAASE,OA+BP,cAAC,EAAD,CACEd,MAAOA,EACPC,aAfe,SAACd,GACpB,IAAI4B,EAAef,EAAMM,KAAI,SAACC,GAI5B,OAHIA,EAAKpB,KAAOA,IACdoB,EAAKE,YAAcF,EAAKE,YAEnBF,KAETK,EAASG,IASLb,WArBa,SAACf,GAClB,IAAM6B,EAAY,YAAIhB,GAAOiB,QAAO,SAACV,GAAD,OAAUA,EAAKpB,KAAOA,KAC1DyB,EAASI,IAoBLb,WAhCa,SAACe,EAAQC,GACrBA,EAAS5B,OAAQ,QAAQsB,KAAKM,EAAS5B,OAI5CqB,GAAS,SAACQ,GAAD,OACPA,EAASd,KAAI,SAACe,GAAD,OAAWA,EAAKlC,KAAO+B,EAASC,EAAWE,eCV/CC,MATf,WACE,OACE,sBAAKvC,UAAU,WAAf,UACE,gDACA,cAAC,EAAD,QCJNwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dd718e93.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState('');\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input,\r\n    });\r\n\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <form className='todo-form' onSubmit={handleSubmit}>\r\n      <input\r\n        type='text'\r\n        placeholder='Add a todo'\r\n        value={input}\r\n        name='text'\r\n        className='todo-input'\r\n        onChange={handleChange}\r\n        ref={inputRef}\r\n      />\r\n      <button className='todo-button'>Submit Todo</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: '',\r\n  });\r\n\r\n  const submitUpdate = (value) => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: '',\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div\r\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n      key={index}\r\n    >\r\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n        {todo.text}\r\n      </div>\r\n      <div className='icons'>\r\n        <RiCloseCircleLine\r\n          onClick={() => removeTodo(todo.id)}\r\n          className='delete-icon'\r\n        />\r\n        <TiEdit\r\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n          className='edit-icon'\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState } from 'react';\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm';\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = (todo) => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n\r\n    setTodos((previous) =>\r\n      previous.map((item) => (item.id === todoId ? newValue : item))\r\n    );\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    const removeArr = [...todos].filter((todo) => todo.id !== id);\r\n    setTodos(removeArr);\r\n  };\r\n\r\n  const completeTodo = (id) => {\r\n    let updatedTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>Add Todo's in the text bar</h2>\r\n      <TodoForm onSubmit={addTodo} />\r\n      <Todo\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className='todo-app'>\n      <h1>Toms Todo List</h1>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}